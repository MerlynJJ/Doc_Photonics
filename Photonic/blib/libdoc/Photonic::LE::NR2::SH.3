.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Photonic::LE::NR2::SH 3"
.TH Photonic::LE::NR2::SH 3 "2019-03-26" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Photonic::LE::NR2::SH
.SH "VERSION"
.IX Header "VERSION"
version 0.011
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 5
\&   use Photonic::LE::NR2::SH;
\&   my $nrsh=Photonic::LE::NR2::SH\->
\&             new(shp=>$shp, epsA1=>$epsA1, epsB1=>$epsB1,
\&                 epsA2=>$epsA2, epsB2=>$epsB2); 
\&   my $PL_G=$nrsh\->selfConsistentL_G;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Calculates the non retarded \s-1SH\s0 polarizations and fields of arbitrary a
periodic composite made up of centrosymmetric isotropic component materials,
using the continuous dipolium model.
.SH "METHODS"
.IX Header "METHODS"
.IP "\(bu" 4
new(shp=>$shp, epsA1=>$epsA1, epsB1=>$epsB1, epsA2=>$epsA2,
            epsB2=>epsB2);
.Sp
Initializes the structure
.Sp
\&\f(CW$shp\fR is a Photonic::LE::NR2::SHP object with the invariant part of
the data structures for the calculations
.Sp
\&\f(CW$epsA1\fR, \f(CW$epsB1\fR, \f(CW$epsA2\fR, \f(CW$epsB2\fR are the dielectric functions of the A
and B materials at the fundamental and the second harmonic frequency
.SH "ACCESORS (read only)"
.IX Header "ACCESORS (read only)"
.IP "\(bu" 4
shp
.Sp
Invariant part of \s-1SHG\s0 calculator.
.IP "\(bu" 4
ndims nrf densityA densityB density nr
.Sp
Accesors handled by shp
.IP "\(bu" 4
epsA1, epsB1
.Sp
Dielectric functions of materials A and B at the fundamental frequency
.IP "\(bu" 4
epsA2, epsB2
.Sp
Dielectric functions of materials A and B at the second harmonic frequency
.IP "\(bu" 4
alpha1
.Sp
Polarizabity field at the fundamental frequency
.IP "\(bu" 4
alpha2
.Sp
Polarizabity field at the second harmonic frequency
.IP "\(bu" 4
u1
.Sp
Spectral variable at fundamental frequency
.IP "\(bu" 4
u2
.Sp
Spectral variable at second harmonic frequency
.IP "\(bu" 4
field1
.Sp
longitudinal field at fundamental
.IP "\(bu" 4
field2
.Sp
longitudinal field at second harmonic
.IP "\(bu" 4
dipolar
.Sp
Dipolar contribution to \s-1SH\s0 polarization field
.IP "\(bu" 4
quadrupolar
.Sp
\&\s-1SH\s0 quadrupolar contribution to \s-1SH\s0 polarization field
.IP "\(bu" 4
external
.Sp
External contribution to \s-1SH\s0 polarization field (quadrupolar + dipolar)
.IP "\(bu" 4
external_G
.Sp
External \s-1SH\s0 polarization field in reciprocal space
.IP "\(bu" 4
externalL_G
.Sp
Longitudinal projection of external polarization field in reciprocal space
.IP "\(bu" 4
\&\s-1HP\s0
.Sp
Photonic::LE::NR2::AllH structure to calculate Haydock basis for
non linear polarization
.IP "\(bu" 4
externalL_n
.Sp
External \s-1SH\s0 polarization field represented in Haydock basis
.IP "\(bu" 4
selfConsistentL_n
.Sp
\&\s-1SH\s0 self consistent longitudinal polarization in Haydock representation
.IP "\(bu" 4
selfConsistentL_G
.Sp
\&\s-1SH\s0 self consistent longitudinal polarization components in reciprocal
space
.IP "\(bu" 4
selfConsistentVecL_G
.Sp
\&\s-1SH\s0 self consistent longitudinal polarization vector field projection in
reciprocal space
.IP "\(bu" 4
selfConsistentVecL
.Sp
\&\s-1SH\s0 self consistent longitudinal polarization vector projection field
in real space
.IP "\(bu" 4
P2
.Sp
\&\s-1SH\s0 self consistent total polarization vector field in real space
.SH "ACCESORS (read/write)"
.IX Header "ACCESORS (read/write)"
.IP "\(bu" 4
filterflag
.Sp
Flag to filter results in reciprocal space to smooth non linear
polarization using the field (nrf) filter.
